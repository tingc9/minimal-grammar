;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of minimal-grammar
;;; created at:
;;;     Fri Sep 27 06:21:16 UTC 2013
;;; based on Matrix customization system version of:
;;;     Tue Jul  2 20:32:27 UTC 2013
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-mod-phrase-simple :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

; proxy norm-lex-item to make changes later
; norm-lex-item not in matrix.tdl
norm-lex-item := norm-ltop-lex-item.

; tense sorts
present := tense.
past := tense.
future := tense.

; aspect sorts
continuous := aspect.
perfective := aspect.
habitual := aspect.

; mood sorts
; proxy put here add later
basic-mood := mood.

;adding person, number and gender sorts
person := sort.
1st := person.
2nd := person.
3rd := person.

number := sort.
singular := number.
plural := number.

gender := sort.
masculine := gender.
feminine := gender.
neuter := gender.

; adding png feature
; ? checkout Flickinger 2000 for justification on PN and G feaures
png :+ [ PERSON person,
         NUMBER number,
         GENDER gender ].

; adding def and idef subtypes of quant relation
; what is the meaning od PRED in relation
; ? why is no PRED specified in event or noun-relation??
def-relation := quant-relation &
  [ PRED "_def_quant_rel" ].
indef-relation := quant-relation &
  [ PRED "_idef_quant_rel" ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Items
;;;;;;;;;;;;;;;;;;;

; arg1-subj-lex-item as mentioned in the assignment
arg1-subj-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.SUBJ.FIRST.LOCAL.CONT.HOOK.INDEX #isubj,
    SYNSEM.LKEYS.KEYREL.ARG1 #isubj ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

; constraint nouns to have a noun-relation as per assignment
noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL [ CAT.VAL [ COMPS < >,
                             SUBJ < >,
                             SPEC < >,
                             SPR < #spr &
                                   [ LOCAL.CAT.HEAD det,
                                     OPT + ] > ],
                   CONT.RELS <! noun-relation !> ] ].

;;; Pronouns

; proxy type to refine later
pronoun-lex := noun-lex.

;;; Verbs

; constraint verbs to have an event-relation as per assignment
verb-lex := basic-verb-lex & non-mod-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             SUBJ < #subj > ],
                   CONT [ HOOK.XARG #xarg,
                          RELS <! event-relation !> ] ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT.VAL [ SPR < >,
                                     COMPS < > ],
                           CONT.HOOK.INDEX #xarg ] ] ].

intransitive-verb-lex := verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

; intrans-verb-lex from assignment lex not lxm for naming consistemcy with matrix.tdl
intrans-verb-lex  := arg1-subj-lex-item & verb-lex.

transitive-verb-lex := verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

;;; Determiners

; constraint determiners to have a quant-relation as per assignment
det-word := norm-lex-item & word &
  [ SYNSEM.LOCAL [ CAT.VAL.SPR.FIRST.LOCAL.CONT.HOOK.INDEX #ispec,
                   CONT [ RELS <! quant-relation !>,
                          HOOK.INDEX #ispec ] ] ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Lexical rule types

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-comp-phrase := basic-head-1st-comp-phrase & head-initial.

subj-head-phrase := decl-head-subj-phrase & head-final &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].
